*******************Q1.Install Docker, either on your native OS or on a VM. Make sure it runs. Type "docker -v" to check if it's installed.*******************
  
  C:\Users\ADITI>docker --version
Docker version 20.10.5, build 55c4c88

C:\Users\ADITI>docker -v
Docker version 20.10.5, build 55c4c88

C:\Users\ADITI>docker version
Client: Docker Engine - Community
 Cloud integration: 1.0.12
 Version:           20.10.5
 API version:       1.41
 Go version:        go1.13.15
 Git commit:        55c4c88
 Built:             Tue Mar  2 20:14:53 2021
 OS/Arch:           windows/amd64
 Context:           default
 Experimental:      true

Server: Docker Engine - Community
 Engine:
  Version:          20.10.5
  API version:      1.41 (minimum version 1.12)
  Go version:       go1.13.15
  Git commit:       363e9a8
  Built:            Tue Mar  2 20:15:47 2021
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.4.4
  GitCommit:        05f951a3781f4f2c1911b05e61c160e9c30eaa8e
 runc:
  Version:          1.0.0-rc93
  GitCommit:        12644e614e25b05da6fd08a38ffa0cfe1903fdec
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0
  
  
  *******************Q2. Find a image from dockerhub of your choice), don't use browser, pull the official image from dockerhub*******************
  
  C:\Users\ADITI>docker login
Authenticating with existing credentials...
Login Succeeded

C:\Users\ADITI>docker images
REPOSITORY          TAG       IMAGE ID       CREATED       SIZE
docker101tutorial   latest    1ae05f66eabe   2 hours ago   28MB
alpine/git          latest    c99c7d810bc1   6 days ago    25.1MB

C:\Users\ADITI>docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED       STATUS       PORTS                NAMES
a8d188c023b8   docker101tutorial   "/docker-entrypoint.…"   2 hours ago   Up 2 hours   0.0.0.0:80->80/tcp   docker-tutorial

C:\Users\ADITI>docker run -it alpine/git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.


*******************Q3.List all the available images in your machine/vm, make sure you see recently pulled image in the list*******************

C:\Users\ADITI>docker images -a
REPOSITORY          TAG       IMAGE ID       CREATED       SIZE
docker101tutorial   latest    1ae05f66eabe   2 hours ago   28MB
alpine/git          latest    c99c7d810bc1   6 days ago    25.1MB


*******************Q4.Find out the "Full" ImageId of the image that you pulled and write it below.*******************

C:\Users\ADITI>docker images -q
1ae05f66eabe
c99c7d810bc1

*******************Q5.Create a container of your image*******************

C:\Users\ADITI>docker run -it alpine/git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

*******************Q6.List all the running containers*******************

C:\Users\ADITI>docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED       STATUS       PORTS                NAMES
a8d188c023b8   docker101tutorial   "/docker-entrypoint.…"   2 hours ago   Up 2 hours   0.0.0.0:80->80/tcp   docker-tutorial

*******************Q7.List all the running and stopped containers*******************

C:\Users\ADITI>docker start a8d188c023b8
a8d188c023b8

C:\Users\ADITI>docker stop a8d188c023b8
a8d188c023b8

C:\Users\ADITI>docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

*******************Q8.Find out the "Full" containerId of the container and write it below.*******************

C:\Users\ADITI>docker ps -l
CONTAINER ID   IMAGE        COMMAND        CREATED       STATUS                   PORTS     NAMES
15a6785079d2   alpine/git   "git --help"   2 hours ago   Exited (0) 2 hours ago             compassionate_nightingale

C:\Users\ADITI>docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED       STATUS         PORTS                NAMES
a8d188c023b8   docker101tutorial   "/docker-entrypoint.…"   4 hours ago   Up 3 minutes   0.0.0.0:80->80/tcp   docker-tutorial
